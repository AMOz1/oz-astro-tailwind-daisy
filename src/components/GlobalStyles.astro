<style is:global>
  /* BUTTONS */
  html[data-theme] .btn {
    font-weight: 400;
    border-width: 0;
    gap: .1rem;
}

  html[data-theme] .btn-primary {
    box-shadow: none;
  }

  html[data-theme] .btn-primary:hover {
    background-color: #1646AA;
  }

  html[data-theme] .btn-outline {
    border-width: 1px;
    border-color: var(--color-base-400);
  }

.btn-neutral {
    border-width: 1px;
    border-color: rgba(255, 255, 255, 0);
    background-color: var(--color-neutral-bg-50);
    color: var(--color-base-content);
}

  html[data-theme] .btn-neutral:hover {
    background-color: var(--color-neutral-bg-100);
  }

  html[data-theme] .btn-dash {
    border-width: 1px;
  }

  html[data-theme] .btn-circle {
    padding-top: 2px;
  }

  html[data-theme] .btn-square {
    padding-top: 2px;
  }

  /* Button loading state */
  html[data-theme] .loading {
    width: calc(var(--size-selector, .25rem)* 5);
    background-color: var(--color-icon-subtle-gray);
  }

  /* INPUTS */
  /* Direct inputs with the .input class get focus styling directly */
  html[data-theme] input.input:focus {
  outline: none !important;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px color-mix(in oklab, var(--color-primary) 15%, transparent);
  }

  /* Override focus styles for input elements inside labels with .input class */
  html[data-theme] label.input > input:focus {
    outline: none;
    box-shadow: none;
    border: none;
  }

  /* Apply the correct focus style to the parent label instead */
  html[data-theme] label.input:has(input:focus) {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px color-mix(in oklab, var(--color-primary) 15%, transparent);
  }

  /* Ensure inputs inside labels don't have their own borders/outlines */
  html[data-theme] label.input > input {
    background: transparent;
    border: none;
    outline: none;
  }

  /* Input validator styling */
  html[data-theme] .validator:user-invalid ~ .validator-hint,
  html[data-theme] .validator:has(:user-invalid) ~ .validator-hint {
    color: var(--color-error-text);
    line-height: 1rem;
    margin-top: -10px;
  }

  html[data-theme] .validator:user-valid,
  html[data-theme] .validator:has(:user-valid),
  html[data-theme] .validator:user-valid:focus,
  html[data-theme] .validator:has(:user-valid):focus,
  html[data-theme] .validator:user-valid:checked,
  html[data-theme] .validator:has(:user-valid):checked,
  html[data-theme] .validator:user-valid[aria-checked=true],
  html[data-theme] .validator:has(:user-valid)[aria-checked=true],
  html[data-theme] .validator:user-valid:focus-within,
  html[data-theme] .validator:has(:user-valid):focus-within {
    --input-color: var(--success);
  }

  html[data-theme] .validator:user-invalid,
  html[data-theme] .validator:has(:user-invalid),
  html[data-theme] .validator:user-invalid:focus,
  html[data-theme] .validator:has(:user-invalid):focus,
  html[data-theme] .validator:user-invalid:checked,
  html[data-theme] .validator:has(:user-invalid):checked,
  html[data-theme] .validator:user-invalid[aria-checked=true],
  html[data-theme] .validator:has(:user-invalid)[aria-checked=true],
  html[data-theme] .validator:user-invalid:focus-within,
  html[data-theme] .validator:has(:user-invalid):focus-within {
    --input-color: var(--color-error-border);
  }

  /* LIST */
  html[data-theme] .list {
    font-size: 1.05rem;
  }
</style>